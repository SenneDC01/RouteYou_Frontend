default:
  image: ubuntu
  tags:
    - docker-runner-frontend
variables:
  CUSTOM_ENV: ""
  REPO: ""

stages:
  - checkBranch
  - buildImage
  - pushImage

devUnitTest:
  stage: checkBranch
  script:
    - echo "Running unit tests for $CUSTOM_ENV branch"
    # do unit tests
    - export CUSTOM_ENV="dev"
    - export REPO=$DEV_FRONTEND_REPO
  only:
    - ci/cd
  artifacts:
    paths:
      - artifacts/CUSTOM_ENV.txt
      - artifacts/REPO.txt

buildImage:
  stage: buildImage
  image: docker:24.0.7
  services:
    - docker:dind
  script:
    - |
      if [ -z "$CUSTOM_ENV" ]; then
        echo "CUSTOM_ENV is empty. Exiting the buildImage job."
        exit 1
      fi
      echo "$CUSTOM_ENV" > artifacts/CUSTOM_ENV.txt
      echo "$REPO" > artifacts/REPO.txt
      docker build -t $CUSTOM_ENV-frontend-image .
      docker save -o $CUSTOM_ENV-frontend-image.tar $CUSTOM_ENV-frontend-image
  dependencies:
    - devUnitTest
  artifacts:
    paths:
      - $CUSTOM_ENV-frontend-image.tar

pushImage:
  stage: pushImage
  image: google/cloud-sdk
  script:
    - touch gcloud-service-key.json
    - echo "$GCLOUD_SERVICE_KEY" > gcloud-service-key.json
    - cat gcloud-service-key.json
    - gcloud auth activate-service-account --key-file=gcloud-service-key.json
    - gcloud auth configure-docker europe-west1-docker.pkg.dev
    # Load the Docker image from the tarball
    - docker load -i $CUSTOM_ENV-frontend-image.tar
    # Push the Docker image to the specified repository
    - docker tag dev-frontend-image:latest $REPO
    - docker push $REPO


 
      
