default:
  image: ubuntu
  tags:
    - docker-runner-frontend

stages:
  - checkBranch
  - buildImage
  - pushImage

devUnitTest:
  stage: checkBranch
  script:
    - echo "Running unit tests for $CUSTOM_ENV branch"
    # do unit tests
    - echo "dev" > BRANCH
    - echo "$DEV_FRONTEND_REPO" > REPO
  artifacts:
    paths:
      - BRANCH
      - REPO
  only:
    - ci/cd

stagingUnitTest:
  stage: checkBranch
  script:
    - echo "Running unit tests for $CUSTOM_ENV branch"
    # do unit tests
    - echo "staging" > BRANCH
    - echo "$STAGING_FRONTEND_REPO" > REPO
  artifacts:
    paths:
      - BRANCH
      - REPO
  only:
    - staging

prodUnitTest:
  stage: checkBranch
  script:
    - echo "Running unit tests for $CUSTOM_ENV branch"
    # do unit tests
    - echo "prod" > BRANCH
    - echo "$PROD_FRONTEND_REPO" > REPO
  artifacts:
    paths:
      - BRANCH
      - REPO
  only:
    - prod

buildImage:
  stage: buildImage
  image: docker:24.0.7
  services:
    - docker:dind
  variables:
    BRANCH: "dev"  # Set the default value
    REPO: "hold"
  script:
    - ls -al  # List the contents of the current directory for debugging
    - export BRANCH=$(cat BRANCH)  # Load the value from the artifact
    - echo "$BRANCH"
    - export REPO=$(cat REPO)  # Load the value from the artifact
    - echo "$REPO"
    - docker build -t "${BRANCH}-frontend-image" .
    - docker save -o "${BRANCH}-frontend-image.tar" "${BRANCH}-frontend-image"
  dependencies:
    - prodUnitTest  # This ensures that prodUnitTest is executed before buildImage
  artifacts:
    paths:
      - "${BRANCH}-frontend-image.tar"

pushImage:
  stage: pushImage
  image: google/cloud-sdk
  script:
    - CUSTOM_ENV=$(cat artifacts/CUSTOM_ENV.txt)  # Read the value from CUSTOM_ENV.txt
    - REPO=$(cat artifacts/REPO.txt)  # Read the value from CUSTOM_ENV.txt
    - touch gcloud-service-key.json
    - echo "$GCLOUD_SERVICE_KEY" > gcloud-service-key.json
    - cat gcloud-service-key.json
    - gcloud auth activate-service-account --key-file=gcloud-service-key.json
    - gcloud auth configure-docker europe-west1-docker.pkg.dev
    # Load the Docker image from the tarball
    - docker load -i $CUSTOM_ENV-frontend-image.tar
    # Push the Docker image to the specified repository
    - docker tag dev-frontend-image:latest $REPO
    - docker push $REPO