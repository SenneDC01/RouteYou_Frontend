default:
  image: ubuntu
  tags:
    - atp-frontend

stages:
  # - unitTests
  - checkBranch
  - buildImage
  - pushImage
  - runAnsible

# unit-test:
#   image: node:latest
#   stage: unitTests
#   only:
#     - dev
#     - staging
#     - main

#   before_script:
#     - npm install
#   script:
#     - npm run test

devUnitTest:
  stage: checkBranch
  only:
    - dev
  script:
    - echo "Running unit tests for development"
    # do unit tests
    - mkdir output
    - echo "dev" > output/branch.txt
    - echo "$DEV_FRONTEND_REPO" > output/repo.txt
  artifacts:
    paths: [output/]

stagingUnitTest:
  stage: checkBranch
  only:
    - staging
  script:
    - echo "Running unit tests for staging"
    # do unit tests
    - mkdir output
    - echo "staging" > output/branch.txt
    - echo "$STAGING_FRONTEND_REPO" > output/repo.txt
  artifacts:
    paths: [output/]
    
prodUnitTest:
  stage: checkBranch
  only:
    - prod
  script:
    - echo "Running unit tests for production"
    # do unit tests
    - mkdir output
    - echo "prod" > output/branch.txt
    - echo "$PROD_FRONTEND_REPO" > output/repo.txt
  artifacts:
    paths: [output/]

buildImage:
  stage: buildImage
  image: docker:24.0.7
  services:
    - docker:dind
  variables:
    BRANCH_NAME: ""  # Set the default value
    REPO: ""
  before_script:
    - export BRANCH_NAME=$(cat output/branch.txt)
    - export REPO=$(cat output/repo.txt)
  script:
    - echo "Building image for branch $BRANCH_NAME"
    - echo "$BRANCH_NAME-frontend-image"
    - echo "Loaded REPO $REPO"
    - docker build -t $BRANCH_NAME-frontend-image .
    - docker save -o $BRANCH_NAME-frontend-image.tar $BRANCH_NAME-frontend-image
  artifacts:
    paths:
      - ./$CI_COMMIT_BRANCH-frontend-image.tar

## i know this is not prietty but google-sdk and docker didn't want to work
pushImage:
  stage: pushImage
  image: google/cloud-sdk
  variables:
    BRANCH_NAME: ""
    REPO: ""
  before_script:
    - export BRANCH_NAME=$(cat output/branch.txt)
    - export REPO=$(cat output/repo.txt)
  script:
    - echo "Pushing image to repo for branch $BRANCH_NAME"
    - touch gcloud-service-key.json
    - echo "$GCLOUD_SERVICE_KEY" > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file=gcloud-service-key.json
    - gcloud auth configure-docker europe-west1-docker.pkg.dev
    - docker load -i ./$BRANCH_NAME-frontend-image.tar
    - docker tag $BRANCH_NAME-frontend-image:latest "$REPO"
    - docker push "$REPO"

runAnsible:
  image: ubuntu
  only:
    - dev
    - staging
    - main
  before_script:
    - export BRANCH_NAME=$(cat output/branch.txt)
    ## Install ssh-agent
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y  && apt-get install git -y)'
    ## Run ssh-agent
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  stage: runAnsible
  script:
    - apt-get update && apt-get upgrade -y
    - apt-get install openssh-server openssh-client -y
    - apt-get -y install sshpass
    - apt-get install -y python3
    - apt-get install python3-pip -y
    - python3 -m pip install --upgrade pip
    - pip3 install ansible==2.9
    - pip3 install ansible-lint
    - cd ansible
    - chmod 700 .
    
    - touch .vault_pass.txt
    - touch key-files/serviceArtifactRegistryAdmin.json
    - touch sshKey/admin_key
    - touch sshKey/admin_key.pub
    - echo "$ANSIBLE_VAULT_PASSWORD" > .vault_pass.txt
    - echo "$GCLOUD_SERVICE_KEY" > serviceArtifactRegistryAdmin.json
    - echo "$ADMIN_KEY" > sshKey/admin_key 
    - echo "$ADMIN_KEY_PUB" > sshKey/admin_key.pub
    - chmod 600 ./sshKey/admin_key
    
    - ansible-playbook -e "target_host=$BRANCH_NAME" playbook.yml
    