
default:
  image: ubuntu
  tags:
    - docker-runner-frontend
stages:
  - checkBranch
  - buildImage
  - pushImage 

variables:
  CUSTOM_ENV: ""
  REPO: ""

devUnitTest:
  stage: checkBranch
  script:
    - echo "Running unit tests for $CUSTOM_ENV branch"
    #do unit tests
    - export CUSTOM_ENV="dev"
    - export REPO=$DEV_FRONTEND_REPO
  only:
    - ci-cd

stagingUnitTest:
  stage: checkBranch
  script:
    - echo "Running unit tests for $CUSTOM_ENV branch"
    #do unit tests
    - export CUSTOM_ENV="staging"
    - export REPO=$STAGING_FRONTEND_REPO
  only:
    - staging

prodUnitTest:
  stage: checkBranch
  script:
    - echo "Running unit tests for $CUSTOM_ENV branch"
    #do unit tests
    - export CUSTOM_ENV="prod"
    - export REPO=$PROD_FRONTEND_REPO
  only:
    - prod

buildImage:
  stage: buildImage
  image: docker:24.0.7
  services:
    - docker:dind
  script:
    - docker build -t $CUSTOM_ENV-frontend-image .
    - docker save -o $CUSTOM_ENV-frontend-image.tar $CUSTOM_ENV-frontend-image
  artifacts:
    paths:
      - $CUSTOM_ENV-frontend-image.tar
  only:
    variables:
      - $CUSTOM_ENV !=""

pushImage:
  stage: pushImage
  image: google/cloud-sdk
  script:
    - touch gcloud-service-key.json
    - echo "$GCLOUD_SERVICE_KEY" > gcloud-service-key.json
    - cat gcloud-service-key.json
    - gcloud auth activate-service-account --key-file=gcloud-service-key.json
    - gcloud auth configure-docker europe-west1-docker.pkg.dev
    # Load the Docker image from the tarball
    - docker load -i $CUSTOM_ENV-frontend-image.tar
    # Push the Docker image to the specified repository
    -  docker tag dev-frontend-image:latest $REPO
    - docker push $REPO
  only:
    variables:
      - $CUSTOM_ENV !=""
      
