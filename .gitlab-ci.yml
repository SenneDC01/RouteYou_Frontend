default:
  image: ubuntu
  tags:
    - atpFrontendRunnertest

stages:
  # - buildSite
  # - buildImage
  # - pushImage 
  - build

# build_site:
#   stage: buildSite
#   image: $NODE_IMAGE
#   script:
#     - ls -al
#     - npm install
#     - npm run build 
#     - ls -al
#   artifacts: 
#     paths:
#       - ".next"


# buildImage:
#   stage: buildImage
#   image: docker:latest
#   services:
#     - name: docker:dind
#   script:
#     - docker --version
#     - echo "FROM nginx:latest" > Dockerfile
#     # - echo "COPY .next /usr/share/nginx/html/.next" >> Dockerfile  
#     - echo "COPY custom.conf /etc/nginx/conf.d/default.conf" >> Dockerfile
#     - echo "RUN rm /etc/nginx/conf.d/default.conf" >> Dockerfile
#     - cat Dockerfile
#     - docker build -t europe-west1-docker.pkg.dev/project-atp-routeyou1/dev-frontend:latest .
#     - ls -all


# push_image:
#   stage: pushImage
#   image: google/cloud-sdk
#   script:
#     - echo $GCLOUD_SERVICE_KEY | base64 -d > gcloud-service-key.json
#     - gcloud auth activate-service-account --key-file=gcloud-service-key.json
#     - gcloud config set project $PROJECT_ID
#     - gcloud auth configure-docker
#     - docker push $BACKEND_REPO

build:
  stage: build
  image: docker:19.03.12
  script:
  - apt-get update -qy
  - apt-get install -y --no-install-recommends curl
  - curl -sSL https://sdk.cloud.google.com | bash
  - exec -l $SHELL
  - gcloud init --console-only
  - echo $GCLOUD_SERVICE_KEY | base64 -d > gcloud-service-key.json
  - gcloud auth activate-service-account --key-file=gcloud-service-key.json
  - echo "FROM nginx:latest" > Dockerfile
  # - echo "COPY .next /usr/share/nginx/html/.next" >> Dockerfile
  - echo "COPY custom.conf /etc/nginx/conf.d/default.conf" >> Dockerfile
  - echo "RUN rm /etc/nginx/conf.d/default.conf" >> Dockerfile
  - cat Dockerfile
  - docker build -t frontend .
  - docker tag frontend gcr.io/$PROJECT_ID/$IMAGE_NAME
  - docker push gcr.io/$PROJECT_ID/$IMAGE_NAME






